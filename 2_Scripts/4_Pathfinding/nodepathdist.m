function [Path2PortXY_UTM_EN_m,...
          Path2Port_NodeDistance_m]...
            = nodepathdist(AStar_OptimalPath_mn,...
                           UTM_Map_X, UTM_Map_Y,...
                           UTM_Zone, UTM_Hemi)
%% Function Description
% JAM 05/05/20

%% Inputs Description
% AStar_Path_mn

% UTM_Zone

% UTM_Hemi

%% Outputs Description
% Path2Port_NodeDistance_m

%% Inputs Checks
% Highly iterative script, input checks not performed.

%% Preallocate Memory
Path2PortXY_UTM_EN_m     = zeros(size(AStar_OptimalPath_mn,1),2);
Path2Port_NodeDistance_m = zeros(size(AStar_OptimalPath_mn,1),1);

%% Calculate UTM Position of Nodes
for n = 1:size(AStar_OptimalPath_mn,1)                                      % For the number of Nodes on the path...
    Path2PortXY_UTM_EN_m(n,:)...
        = [UTM_Map_X(AStar_OptimalPath_mn(n,2),...
                     AStar_OptimalPath_mn(n,1)),...
           UTM_Map_Y(AStar_OptimalPath_mn(n,2),...
                     AStar_OptimalPath_mn(n,1))];
                 
end

%% Calculate Euclidean Distance between Nodes on Path
for n = 2:size(Path2PortXY_UTM_EN_m,1)                                      % From the second Node on the path...  
    Path2Port_NodeDistance_m(n,:)...
        = utmeuclideandist(Path2PortXY_UTM_EN_m(n-1,1),...
                           Path2PortXY_UTM_EN_m(n-1,2),...
                           UTM_Zone,...
                           UTM_Hemi,...
                           Path2PortXY_UTM_EN_m(n,1),...
                           Path2PortXY_UTM_EN_m(n,2),...
                           UTM_Zone,...
                           UTM_Hemi);
                       
end

end
