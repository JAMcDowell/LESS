function [TRANSM, YIELD] = less_transmission(YIELD, PATHFIND, METOCEAN, SCENARIO, SITES, DEVICES, IN)
%% Function Description
%

%% Inputs Description
% YIELD

% PATHFIND

% SCENARIO

% SITES

% DEVICES

% IN

%% Outputs Description
% TRANSM

% YIELD

%% DISCRETE
if IN.RUN.DISCRETE
    disp('Calculating Transmission Losses for DISCRETE Sites...'); 
   
    for s = 1:size(SITES,2)                                                 % For each Site...
        disp([' - Beginning Transmission Loss calculation for "',char(string(SITES(s).Name)),'" site...']);
        Start = tic; 
        
        % Site Name
        TRANSM.DISCRETE.SITES(s).Sites_Name = SITES(s).Name;
        
        % Total Distance to Landfall
        if IN.RUN.SPATIAL
            TRANSM.DISCRETE.SITES(s).Dist2LandFall_m...
                = PATHFIND.DISCRETE.SITES(s).TRANSMISSION.Path2LandFall_AStarDistance_m;
            
        else
            TRANSM.DISCRETE.SITES(s).Dist2LandFall_m...
                = PATHFIND.DISCRETE.SITES(s).TRANSMISSION.Path2LandFall_EuclidDistance_m;
            
        end
        
        for d = 1:size(DEVICES,2)                                           % For each Device... 
            disp(['     - Calculating Idealised Energy Delivered for "',DEVICES(d).Name,'" Device...']);
            % Devices Name
            TRANSM.DISCRETE.SITES(s).DEVICES(d).Devices_Name...
                = DEVICES(d).Name;

            %% Calculate Ideal Energy Delivered to shore (per device)                                        
           [TRANSM.DISCRETE.SITES(s).DEVICES(d).Architecture,...
            Power_IdealDel_W,...
            Power_Ideal_LossPerDevice_pc]...
                    = arrayloss(1,...                                       % Assuming each device independent.
                               (YIELD.DISCRETE.IDEAL.GENERATED.SITES(s).DEVICES(d).Power_Ideal_GenPerDevice_kW.Power_Generated_kW .* 1000),...
                                SCENARIO.Transmission.Transmission_Parameters.Transmission_GenerationVoltage_V(d),... 
                                SCENARIO.Transmission.Transmission_Parameters.Transmission_OnboardTransformerNoLoadLosses_W(d),...
                                SCENARIO.Transmission.Transmission_Parameters.Transmission_OnboardTransformerEfficiency_pc(d),...
                                SCENARIO.Transmission.Transmission_Parameters.Transmission_OnboardSwitchgearEfficiency_pc(d),...
                                SCENARIO.Transmission.Transmission_Parameters.Transmission_ExportCableVoltage_V(d),...
                                SCENARIO.Transmission.Transmission_Parameters.Transmission_ExportCableResistance_ohmpm(d),...
                                TRANSM.DISCRETE.SITES(s).Dist2LandFall_m,...
                                SCENARIO.Transmission.Transmission_Parameters.Transmission_ShoreSwitchgearEfficiency_pc(d),...
                                SCENARIO.Transmission.Transmission_Parameters.Transmission_ShoreTransformerNoLoadLosses_W(d),...
                                SCENARIO.Transmission.Transmission_Parameters.Transmission_ShoreTransformerEfficiency_pc(d),...
                                SCENARIO.Transmission.Transmission_Parameters.Transmission_GridVoltage_V(d),...
                                SCENARIO.Transmission.Transmission_Parameters.Transmission_PowerFactor_pc(d),...
                                3);
                     
            TRANSM.DISCRETE.SITES(s).DEVICES(d).Power_Ideal_GenDelLossPerDevice_kW...
                = timetable(YIELD.DISCRETE.IDEAL.GENERATED.SITES(s).Flow_Vel_Abs_Surf_ms.Time,...
                            YIELD.DISCRETE.IDEAL.GENERATED.SITES(s).DEVICES(d).Power_Ideal_GenPerDevice_kW.Power_Generated_kW,...
                            Power_IdealDel_W ./ 1000,...
                            Power_Ideal_LossPerDevice_pc,...
                            'VariableNames',{'Power_Ideal_GenPerDevice_kW','Power_Ideal_DelPerDevice_kW','Power_Ideal_LossPerDevice_pc'});
            
            %% Ideal Energy Delivered  
            % Site Name
            YIELD.DISCRETE.IDEAL.DELIVERED.SITES(s).Sites_Name...
                = SITES(s).Name;
            
            % Devices Name
            YIELD.DISCRETE.IDEAL.DELIVERED.SITES(s).DEVICES(d).Devices_Name...
                = DEVICES(d).Name; 
            
            % Ideal Power Generated/Delivered/Losses
            YIELD.DISCRETE.IDEAL.DELIVERED.SITES(s).DEVICES(d).Power_Ideal_GenDelLossPerDevice_kW...
                = TRANSM.DISCRETE.SITES(s).DEVICES(d).Power_Ideal_GenDelLossPerDevice_kW;
            
            % Ideal Energy Generated
            YIELD.DISCRETE.IDEAL.DELIVERED.SITES(s).DEVICES(d).Energy_Ideal_GenPerDevice_kWh...
                = YIELD.DISCRETE.IDEAL.GENERATED.SITES(s).DEVICES(d).Energy_Ideal_GenPerDevice_kWh;
            
            % Ideal Energy Delivered
            YIELD.DISCRETE.IDEAL.DELIVERED.SITES(s).DEVICES(d).Energy_Ideal_DelPerDevice_kWh...
               = double(sum(Power_IdealDel_W ./ 1000));      

            % Ideal Energy Loss Percentage
            YIELD.DISCRETE.IDEAL.DELIVERED.SITES(s).DEVICES(d).Energy_Ideal_LossPerDevice_pc...
                = double(mean(Power_Ideal_LossPerDevice_pc(Power_Ideal_LossPerDevice_pc > 0)));
            
            %% Monthly Breakdown
            for m = 1:12                                                    % For each month...                 
                % Month Name
                YIELD.DISCRETE.IDEAL.DELIVERED.SITES(s).DEVICES(d).Monthly(m).Month...
                    = monthnum2name(m,'Short');           
                
                % Monthly Ideal Power Generated/Delivered/Losses  Per Device
                YIELD.DISCRETE.IDEAL.DELIVERED.SITES(s).DEVICES(d).Monthly(m).Power_Ideal_GenDelLossPerDevice_kW...
                    = YIELD.DISCRETE.IDEAL.DELIVERED.SITES(s).DEVICES(d).Power_Ideal_GenDelLossPerDevice_kW...
                    (month(METOCEAN.DISCRETE.(SITES(s).Name).DateTime_UTC) == m,:);

                % Monthly Ideal Energy Generated Per Device
                YIELD.DISCRETE.IDEAL.DELIVERED.SITES(s).DEVICES(d).Monthly(m).Energy_Ideal_GenPerDevice_kWh...
                    = double(sum(YIELD.DISCRETE.IDEAL.DELIVERED.SITES(s).DEVICES(d).Monthly(m).Power_Ideal_GenDelLossPerDevice_kW.Power_Ideal_GenPerDevice_kW));
                
                % Monthly Ideal Energy Delivered Per Device
                YIELD.DISCRETE.IDEAL.DELIVERED.SITES(s).DEVICES(d).Monthly(m).Energy_Ideal_DelPerDevice_kWh...
                    = double(sum(YIELD.DISCRETE.IDEAL.DELIVERED.SITES(s).DEVICES(d).Monthly(m).Power_Ideal_GenDelLossPerDevice_kW.Power_Ideal_DelPerDevice_kW));
                
                % Monthly Average Ideal Energy Loss Percentage
                YIELD.DISCRETE.IDEAL.DELIVERED.SITES(s).DEVICES(d).Monthly(m).Energy_Ideal_LossPerDevice_kWh...
                    = double(mean(YIELD.DISCRETE.IDEAL.DELIVERED.SITES(s).DEVICES(d).Monthly(m).Power_Ideal_GenDelLossPerDevice_kW.Power_Ideal_LossPerDevice_pc...
                    (YIELD.DISCRETE.IDEAL.DELIVERED.SITES(s).DEVICES(d).Monthly(m).Power_Ideal_GenDelLossPerDevice_kW.Power_Ideal_LossPerDevice_pc > 0)));
               
            end            
        end
    end
    
    % Finalise Section
    Stop = toc(Start); 
    disp([' - Time Elapsed: ',num2str(round2(Stop,0.01)),' seconds.']);
    
end

%% SPATIAL
if IN.RUN.SPATIAL
    disp('Calculating Transmission Losses for SPATIAL Region...');
    delete(gcp('nocreate')); PP = parpool(feature('numcores'));             % Start the Parallel computing Pool. 
       
    %% Preallocate NaN Arrays to be Filled
    disp(' - Preallocating memory for the population of large arrays...');
    % Valid Wet Point (Parallel Worker)
    ValidChartDatumDepth_Binary...
        = logical(~PATHFIND.MAPS.BinaryMobilityMap); 

    for d = 1:size(DEVICES,2)
        % Device Name 
        TRANSM.SPATIAL.DEVICES(d).Devices_Name...
            = DEVICES(d).Name;  
        
        YIELD.SPATIAL.IDEAL.DELIVERED.DEVICES(d).Devices_Name...
            = DEVICES(d).Name;  
        
        % Idealised Power Generated (Parallel Worker)
        Power_Ideal_GenPerDevice_W...
            = single(YIELD.SPATIAL.IDEAL.GENERATED.DEVICES(d).Power_Ideal_GenPerDevice_kW...
            .* 1000); 
        
        % Valid Point for Device Deployment (Parallel Worker)                                        
        ValidDeviceDeployment_Binary...
             = YIELD.SPATIAL.IDEAL.GENERATED.DEVICES(d).ValidDeviceDeployment_Binary;      
        
        % Transmission Parameters (Parallel Workers)
        Transmission_GenerationVoltage_V...
            = SCENARIO.Transmission.Transmission_Parameters.Transmission_GenerationVoltage_V(d);
        
        Transmission_OnboardTransformerNoLoadLosses_W...
            = SCENARIO.Transmission.Transmission_Parameters.Transmission_OnboardTransformerNoLoadLosses_W(d);
        
        Transmission_OnboardTransformerEfficiency_pc...
            = SCENARIO.Transmission.Transmission_Parameters.Transmission_OnboardTransformerEfficiency_pc(d);

        Transmission_OnboardSwitchgearEfficiency_pc...
            = SCENARIO.Transmission.Transmission_Parameters.Transmission_OnboardSwitchgearEfficiency_pc(d);
                             
        Transmission_ExportCableVoltage_V...
            = SCENARIO.Transmission.Transmission_Parameters.Transmission_ExportCableVoltage_V(d);
        
        Transmission_ExportCableResistance_ohmpm...
            = SCENARIO.Transmission.Transmission_Parameters.Transmission_ExportCableResistance_ohmpm(d);
        
        Path2LandFall_AStarDistance_m...
            = PATHFIND.SPATIAL.TRANSMISSION.Path2LandFall_AStarDistance_m;
        
        Transmission_ShoreSwitchgearEfficiency_pc...
            = SCENARIO.Transmission.Transmission_Parameters.Transmission_ShoreSwitchgearEfficiency_pc(d);
        
        Transmission_ShoreTransformerNoLoadLosses_W...
            = SCENARIO.Transmission.Transmission_Parameters.Transmission_ShoreTransformerNoLoadLosses_W(d);
        
        Transmission_ShoreTransformerEfficiency_pc...
            = SCENARIO.Transmission.Transmission_Parameters.Transmission_ShoreTransformerEfficiency_pc(d);
        
        Transmission_GridVoltage_V...
            = SCENARIO.Transmission.Transmission_Parameters.Transmission_GridVoltage_V(d);
        
        Transmission_PowerFactor_pc...
            = SCENARIO.Transmission.Transmission_Parameters.Transmission_PowerFactor_pc(d);
        
        % Idealised Power Delivered (Parallel Worker)
        Power_IdealDelPerDevice_W...
            = single(YIELD.SPATIAL.IDEAL.GENERATED.DEVICES(d).Power_Ideal_GenPerDevice_kW);
        
        % Idealised Power Losses (Parallel Worker)
        Power_Ideal_LossPerDevice_pc...
            = single(YIELD.SPATIAL.IDEAL.GENERATED.DEVICES(d).Power_Ideal_GenPerDevice_kW);  
        
        %% Calculate Idealised Power Delivered, Energy Delivered & Losses
        disp([' - Calculating Idealised Energy Delivered for "',DEVICES(d).Name,'" Device at every grid point (this may take some time)...']);
        Start = tic; b = waitbar(0,'1','Name','Evaluating row number...');  % Start timer.
        
        for x = 1:size(Power_Ideal_GenPerDevice_W,2)                        % For each row...
            waitbar(x/size(Power_Ideal_GenPerDevice_W,2), b, sprintf('%5.0f',x));
            parfor y = 1:size(Power_Ideal_GenPerDevice_W,3)                 % For each column...
                if ValidChartDatumDepth_Binary(x,y)...                      % If the grid point is water...
                && ValidDeviceDeployment_Binary(x,y)                        % If the grid point is Device specific acceptable deployment location...
                    % Idealised Power Delivered (Temporary)
                 [~,Power_IdealDelPerDevice_W(:,x,y),...
                    Power_Ideal_LossPerDevice_pc(:,x,y)]...
                        = arrayloss(1,...
                                    Power_Ideal_GenPerDevice_W(:,x,y),...
                                    Transmission_GenerationVoltage_V,...
                                    Transmission_OnboardTransformerNoLoadLosses_W,...
                                    Transmission_OnboardTransformerEfficiency_pc,...
                                    Transmission_OnboardSwitchgearEfficiency_pc,...
                                    Transmission_ExportCableVoltage_V,...
                                    Transmission_ExportCableResistance_ohmpm,...
                                    Path2LandFall_AStarDistance_m(x,y),...
                                    Transmission_ShoreSwitchgearEfficiency_pc,...
                                    Transmission_ShoreTransformerNoLoadLosses_W,...
                                    Transmission_ShoreTransformerEfficiency_pc,...
                                    Transmission_GridVoltage_V,...
                                    Transmission_PowerFactor_pc,...
                                    3);  
                end
            end
        end
        
        Stop = toc(Start); close(b);
        disp([' - Time Elapsed: ',num2str(round2(Stop/60,0.01)),' minutes.']);
        
        %% Store Output Variables
        % Ideal Power Delivered Per Device
        TRANSM.SPATIAL.DEVICES(d).Power_Ideal_DelPerDevice_kW...
            = single(Power_IdealDelPerDevice_W ./ 1000);
        
        % Ideal Power Losses Per Device
        TRANSM.SPATIAL.DEVICES(d).Power_Ideal_LossPerDevice_pc...
            = single(Power_Ideal_LossPerDevice_pc);
        
        % Ideal Energy Delivered Per Device
        TRANSM.SPATIAL.DEVICES(d).Energy_Ideal_DelPerDevice_kWh...
            = single(squeeze(sum(Power_IdealDelPerDevice_W ./ 1000,1)));
        
        TRANSM.SPATIAL.DEVICES(d).Energy_Ideal_DelPerDevice_kWh(~ValidChartDatumDepth_Binary)...
            = NaN;
        
        YIELD.SPATIAL.IDEAL.DELIVERED.DEVICES(d).Energy_Ideal_DelPerDevice_kWh...
            = TRANSM.SPATIAL.DEVICES(d).Energy_Ideal_DelPerDevice_kWh;

        % Ideal Energy Loss Per Device
        Energy_Ideal_LossPerDevice_pc...
            = single(Power_Ideal_LossPerDevice_pc);
        
        Energy_Ideal_LossPerDevice_pc(Energy_Ideal_LossPerDevice_pc == 0)...
            = NaN;
        
        TRANSM.SPATIAL.DEVICES(d).Energy_Ideal_LossPerDevice_pc...
            = squeeze(mean(Energy_Ideal_LossPerDevice_pc,1,'omitnan'));
        
        TRANSM.SPATIAL.DEVICES(d).Energy_Ideal_LossPerDevice_pc...
        (isnan(TRANSM.SPATIAL.DEVICES(d).Energy_Ideal_LossPerDevice_pc)...
         & ValidChartDatumDepth_Binary) = 0;
     
        YIELD.SPATIAL.IDEAL.DELIVERED.DEVICES(d).Energy_Ideal_LossPerDevice_pc...
            = TRANSM.SPATIAL.DEVICES(d).Energy_Ideal_LossPerDevice_pc;
     
        %% Monthly Breakdown
        for m = 1:12                                                        % For each month...                 
            % Month Name
            YIELD.SPATIAL.IDEAL.DELIVERED.DEVICES(d).Monthly(m).Month...
                = monthnum2name(m,'Short');             

            % Monthly Ideal Energy Delivered Per Device
            YIELD.SPATIAL.IDEAL.DELIVERED.DEVICES(d).Monthly(m).Energy_Ideal_DelPerDevice_kWh...
                = single(squeeze(sum(TRANSM.SPATIAL.DEVICES(d).Power_Ideal_DelPerDevice_kW(month(METOCEAN.SPATIAL.DateTime_UTC) == m,:,:),1)));
            
            YIELD.SPATIAL.IDEAL.DELIVERED.DEVICES(d).Monthly(m).Energy_Ideal_DelPerDevice_kWh...
                (~ValidChartDatumDepth_Binary) = NaN;
            
            % Monthly Ideal Energy Losses Per Device
            Monthly_Energy_Ideal_LossPerDevice_pc...
                = single(TRANSM.SPATIAL.DEVICES(d).Power_Ideal_LossPerDevice_pc(month(METOCEAN.SPATIAL.DateTime_UTC) == m,:,:));
            
            Monthly_Energy_Ideal_LossPerDevice_pc(Monthly_Energy_Ideal_LossPerDevice_pc == 0)...
                = NaN;
            
            YIELD.SPATIAL.IDEAL.DELIVERED.DEVICES(d).Monthly(m).Energy_Ideal_LossPerDevice_pc...
                = squeeze(mean(Monthly_Energy_Ideal_LossPerDevice_pc,1,'omitnan'));

            YIELD.SPATIAL.IDEAL.DELIVERED.DEVICES(d).Monthly(m).Energy_Ideal_LossPerDevice_pc...
            (isnan(YIELD.SPATIAL.IDEAL.DELIVERED.DEVICES(d).Monthly(m).Energy_Ideal_LossPerDevice_pc)...
            & ValidChartDatumDepth_Binary) = 0;
        
        end  
     
    end
    
    % Finalise Section
    delete(PP);                                                             % Delete the Parallel Pool.    
    disp(' % Transmission for SPATIAL Region calculated successfully.');
    
end

end
