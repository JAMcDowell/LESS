function [LCOE] = less_lcoe(OPERATIONS, TRANSM, YIELD, PATHFIND, METOCEAN, SCENARIO, SITES, DEVICES, IN)
%% Function Description - less_lcoe - JAM 26/11/20
% This function calculates Levelised Cost of Energy (LCoE) for the
% specified Scenario.

%% Inputs Description
% OPERATIONS
% TRANSM
% YIELD
% PATHFIND
% SCENARIO
% SITES
% DEVICES
% IN

%% Outputs Description
% LCOE

%% DISCRETE Sites
if IN.RUN.DISCRETE
    disp('Calculating LCoE for DISCRETE Sites...');
    for s = 1:size(SITES,2)
        % Sites Name
        disp(['Calculating LCoE at "',SITES(s).Name,'" Site...']);
        LCOE.DISCRETE.SITES(s).Sites_Name = SITES(s).Name;
        
        for d = 1:size(DEVICES,2)
            %% Capital Expenditure (CapEx) - Array
            % Devices Name
            disp([' - Calculating LCoE for "',DEVICES(d).Name,'" Device...']);
            disp('   - Calculating CapEx...'); Start = tic;
            LCOE.DISCRETE.SITES(s).DEVICES(d).Devices_Name....
                = DEVICES(d).Name;
          
            % Device Development Costs
            LCOE.DISCRETE.SITES(s).DEVICES(d).CAPEX.DeviceDevelopment_CCC...
                = SCENARIO.Devices.Devices_Costs.Devices_DevelopmentCost_CCC(d);
            
            % Site Selection Costs
            LCOE.DISCRETE.SITES(s).DEVICES(d).CAPEX.SiteSelection_CCC...
                = SCENARIO.Sites.Sites_Costs.Sites_AssessmentCosts_CCC(s);
            
            % Manufacturing Costs
            LCOE.DISCRETE.SITES(s).DEVICES(d).CAPEX.Manufacturing_CCC...
                = less_capex_manufact(SCENARIO.Transmission.Transmission_Costs.Transmission_ShoreSubStationInfrastructureCost_CCC(d) + SCENARIO.Transmission.Transmission_Costs.Transmission_ShoreTransformerCost_CCC(d),...
                                      SCENARIO.Transmission.Transmission_Costs.Transmission_OnboardTransformerCost_CCC(d) + SCENARIO.Transmission.Transmission_Costs.Transmission_OnboardSwitchgearCost_CCC(d) + SCENARIO.Transmission.Transmission_Costs.Transmission_ShoreSwitchgearCost_CCC(d),... 
                                      SCENARIO.Transmission.Transmission_Costs.Tranmission_ExportCableCost_CCCpm(d) .* TRANSM.DISCRETE.SITES(s).Dist2LandFall_m,...
                                      SCENARIO.Devices.Devices_Costs.Devices_StructureCost_CCC(d),...
                                      SCENARIO.Turbines.Turbines_Cost.Turbines_Cost_CCC(strcmp(SCENARIO.Turbines.Turbines_Cost.Turbines_Name, DEVICES(d).Turbines_Name)),...
                                      SCENARIO.Devices.Devices_Costs.Devices_AnchorCost_CCCpAnch(d),...
                                      SCENARIO.Devices.Devices_Costs.Devices_MooringLineCost_CCCpAnch(d),...
                                      SCENARIO.Project.Project_ArraySize.Project_ArraySize(1),...
                                      DEVICES(d).NumberTurbines,...
                                      DEVICES(d).NumberAnchorPoints);                 
                                  
            % Total Capital Expenditure
            LCOE.DISCRETE.SITES(s).DEVICES(d).CAPEX.TotalCapEx_CCC...
                = less_capex(LCOE.DISCRETE.SITES(s).DEVICES(d).CAPEX.DeviceDevelopment_CCC,...
                             LCOE.DISCRETE.SITES(s).DEVICES(d).CAPEX.SiteSelection_CCC,...
                             LCOE.DISCRETE.SITES(s).DEVICES(d).CAPEX.Manufacturing_CCC);
    
            %% Annual Operational Expenditure (OpEx)
            disp('   - Calculating OpEx ...');
            for o = 1:size(DEVICES(d).OPERATIONS,2)
                % Operations Name
                LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).Operations_name...
                    = DEVICES(d).OPERATIONS(o).Name;

                for v = 1:size(DEVICES(d).OPERATIONS(o).VESSELS,2)
                    % Vessels Name
                    LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).Vessels_Name...
                        = DEVICES(d).OPERATIONS(o).VESSELS(v).Name;
                    
                    % Vessels Suitability
                    LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).Suitability4Operation...
                        = DEVICES(d).OPERATIONS(o).VESSELS(v).Suitability4Operation;  

                    if strcmp(DEVICES(d).OPERATIONS(o).VESSELS(v).Suitability4Operation,'Yes')
                        % A* or Euclidean Port Distance
                        if IN.RUN.SPATIAL
                            NearestSuitableValidPortName = PATHFIND.DISCRETE.SITES(s).VESSELS(v).NearestSuitableValidPort_AStar;
                        else
                            NearestSuitableValidPortName = PATHFIND.DISCRETE.SITES(s).VESSELS(v).NearestSuitableValidPort_Euclid;
                        end

                        %% Port Costs (Hire) - Monthly Per Device Breakdown
                        for m = 1:12                                        
                            % Month Name
                            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Month...
                                = monthnum2name(m,'Short');
                            
                            % Total Days Required (Accounting for Standby)
                            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Ports_TotalReqDuration_D...
                                = ceil(OPERATIONS.DISCRETE.SITES(s).DEVICES(d).OPERATIONS(o).VESSELS(v).TotalStandbyTime(m).OperationDuration_D...
                                + OPERATIONS.DISCRETE.SITES(s).DEVICES(d).OPERATIONS(o).VESSELS(v).TotalStandbyTime(m).TotalStandbyTime_D);
                            
                            % Cap at Number of Days within Month
                            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Ports_TotalReqDuration_D...
                                (LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Ports_TotalReqDuration_D > eomday(year(METOCEAN.DISCRETE.(SITES(s).Name).DateTime_UTC(1)),m))...
                                = eomday(year(METOCEAN.DISCRETE.(SITES(s).Name).DateTime_UTC(1)),m);
                            
                            % Port Hire Costs
                            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Ports_Hire_CCC...
                                = less_portcosts(LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Ports_TotalReqDuration_D,...
                                                 SCENARIO.Ports.Ports_Costs.Ports_HireCosts_CCCpd(strcmp(SCENARIO.Ports.Ports_Costs.Ports_Name, NearestSuitableValidPortName))); 
                        end

                        %% Vessel Costs (Hire, Running Standby) - Monthly Per Device Breakdown 
                        for m = 1:12
                           [LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Vessels_Hire_CCC,...
                            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Vessels_Running_CCC,...
                            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Vessels_Standby_CCC]...
                                = less_vesselcosts(OPERATIONS.DISCRETE.SITES(s).DEVICES(d).OPERATIONS(o).VESSELS(v).TotalStandbyTime(m).OperationDuration_D,...
                                                   DEVICES(d).OPERATIONS(o).OnSiteDuration_h,...
                                                   OPERATIONS.DISCRETE.SITES(s).DEVICES(d).OPERATIONS(o).VESSELS(v).VesselLimitedTransitTime.TotalTransitTime_h,...
                                                   OPERATIONS.DISCRETE.SITES(s).DEVICES(d).OPERATIONS(o).VESSELS(v).TotalStandbyTime(m).TotalStandbyTime_D,...
                                                   SCENARIO.Vessels.Vessels_Costs.Vessels_HireCost_CCCpd(v),...
                                                   SCENARIO.Vessels.Vessels_Costs.Vessels_RunningCost_CCCph(v),...
                                                   SCENARIO.Vessels.Vessels_Costs.Vessels_StandbyCost_CCCpd(v));  
                        end                       
                        
                        %% Port Costs (Hire) - Annual Per Device                             
                       [LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Min.Ports_Hire_CCC,...
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Mean.Ports_Hire_CCC,...   
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Max.Ports_Hire_CCC]...
                            = minmeanmax([LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice.Ports_Hire_CCC]...
                                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py);

                        %% Vessel Costs (Hire, Running,Standby) - Annual Per Device            
                        % Vessel Hire Costs
                       [LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Min.Vessels_Hire_CCC,...
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Mean.Vessels_Hire_CCC,...
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Max.Vessels_Hire_CCC]...
                            = minmeanmax([LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice.Vessels_Hire_CCC]...
                                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py);
                        % Vessel Running Costs            
                       [LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Min.Vessels_Running_CCC,...
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Mean.Vessels_Running_CCC,...
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Max.Vessels_Running_CCC]...
                            = minmeanmax([LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice.Vessels_Running_CCC]...
                                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py);
                        % Vessel Standby Costs
                       [LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Min.Vessels_Standby_CCC,...
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Mean.Vessels_Standby_CCC,...
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Max.Vessels_Standby_CCC]...
                            = minmeanmax([LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice.Vessels_Standby_CCC]...
                                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py);
                        
                        %% Annual OpEx - LESS Tool Estimates       
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MinOpEx_CCC...
                             = less_opex_operations(LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Min.Ports_Hire_CCC,...
                                                    LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Min.Vessels_Hire_CCC,...
                                                    LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Min.Vessels_Running_CCC,...
                                                    LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Min.Vessels_Standby_CCC);
                        
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MeanOpEx_CCC...
                             = less_opex_operations(LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Mean.Ports_Hire_CCC,...
                                                    LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Mean.Vessels_Hire_CCC,...
                                                    LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Mean.Vessels_Running_CCC,...
                                                    LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Mean.Vessels_Standby_CCC);
                        
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MaxOpEx_CCC...
                             = less_opex_operations(LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Max.Ports_Hire_CCC,...
                                                    LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Max.Vessels_Hire_CCC,...
                                                    LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Max.Vessels_Running_CCC,...
                                                    LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Max.Vessels_Standby_CCC);
                        
                        %% Annual OpEx - Standard Estimates
                        % Standard Port Costs
                        Standard_Ports_Hire_CCCpy...
                            = less_portcosts(DEVICES(d).OPERATIONS(o).OnSiteDuration_h ./ 24,...
                                             SCENARIO.Ports.Ports_Costs.Ports_HireCosts_CCCpd(strcmp(SCENARIO.Ports.Ports_Costs.Ports_Name, NearestSuitableValidPortName))); 
                        % Standard Vessel Costs
                       [Standard_Vessels_Hire_CCCpy,...
                        Standard_Vessels_Running_CCCpy,...
                        Standard_Vessels_Standby_CCCpy]...
                            = less_vesselcosts(DEVICES(d).OPERATIONS(o).OnSiteDuration_h ./ 24,...
                                               DEVICES(d).OPERATIONS(o).OnSiteDuration_h,...
                                               OPERATIONS.DISCRETE.SITES(s).DEVICES(d).OPERATIONS(o).VESSELS(v).VesselLimitedTransitTime.TotalTransitTime_h,...
                                               0,...
                                               SCENARIO.Vessels.Vessels_Costs.Vessels_HireCost_CCCpd(v),...
                                               SCENARIO.Vessels.Vessels_Costs.Vessels_RunningCost_CCCph(v),...
                                               SCENARIO.Vessels.Vessels_Costs.Vessels_StandbyCost_CCCpd(v));   
                        % Standard OpEx
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).StandardOpEx_CCC...
                            = less_opex_operations(Standard_Ports_Hire_CCCpy .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py,...
                                                   Standard_Vessels_Hire_CCCpy .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py,...
                                                   Standard_Vessels_Running_CCCpy .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py,...
                                                   Standard_Vessels_Standby_CCCpy .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py);
                        clearvars Standard_Ports_Hire_CCCpy Standard_Vessels_Hire_CCCpy Standard_Vessels_Running_CCCpy Standard_Vessels_Standby_CCCpy;                
                                               
                    else
                        % Unsuitable Vessel Placeholders
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice = 'VESSEL UNSUITABLE';
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice  = 'VESSEL UNSUITABLE';
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MinOpEx_CCC      = NaN;
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MeanOpEx_CCC     = NaN;
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MaxOpEx_CCC      = NaN;
                        LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).StandardOpEx_CCC = NaN;
                    end
                end 
                
                %% Cheapest Vessel for Each Operation
                % Cheapest Vessel Index
                [~,Idx] = min([LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS.MeanOpEx_CCC]);
                
                % Cheapest Vessel Name
                LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).MostCostEffectiveVessel...
                    = LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(Idx).Vessels_Name;
                
                % Estimates of OpEx with Cheapest Vessel (Min/Mean/Max/Standard Estimates)
                LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).MinOpEx_CCC...
                    = LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(Idx).MinOpEx_CCC;
                
                LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).MeanOpEx_CCC...
                    = LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(Idx).MeanOpEx_CCC;
                
                LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).MaxOpEx_CCC...
                    = LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(Idx).MaxOpEx_CCC;   
                
                LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).StandardOpEx_CCC...
                    = LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS(o).VESSELS(Idx).StandardOpEx_CCC;
            end
            
            %% Total Annual OpEx - Array
            % Sites Leasing Costs
            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Leasing_CCCpy...
                = SCENARIO.Sites.Sites_Costs.Sites_LeasingCosts_CCCpy(s);    
            
            % Temporary Variables
            MinArray  = [LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS.MinOpEx_CCC];
            MeanArray = [LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS.MeanOpEx_CCC];
            MaxArray  = [LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS.MaxOpEx_CCC];
            Standard  = [LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS.StandardOpEx_CCC];
            
            % Installation Operations (Min/Mean/Max/Standard Estimates)
            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Install_Min_CCC...
                = sum(MinArray(contains({LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS.Operations_name},'Install')))...
                .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);
            
            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Install_Mean_CCC...
                = sum(MeanArray(contains({LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS.Operations_name},'Install')))...
                .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);
            
            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Install_Max_CCC...
                = sum(MaxArray(contains({LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS.Operations_name},'Install')))...
                .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);
            
            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Install_Standard_CCC...
                = sum(Standard(contains({LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS.Operations_name},'Install')))...
                .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);
            
            % Maintenance (Total of Minor & Major, Min/Mean/Max/Standard Estimates)
            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Maint_Min_CCCpy...
                = sum(MinArray(contains({LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS.Operations_name},'Maint')))...
                .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);
            
            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Maint_Mean_CCCpy...
                = sum(MeanArray(contains({LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS.Operations_name},'Maint')))...
                .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);
            
            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Maint_Max_CCCpy...
                = sum(MaxArray(contains({LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS.Operations_name},'Maint')))...
                .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);
            
            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Maint_Standard_CCCpy...
                = sum(Standard(contains({LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS.Operations_name},'Maint')))...
                .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);
            
            % Decommissioning (Min/Mean/Max/Standard Estimates)
            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Decom_Min_CCC...
                = sum(MinArray(contains({LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS.Operations_name},'Decom')))...
                .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);
            
            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Decom_Mean_CCC...
                = sum(MeanArray(contains({LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS.Operations_name},'Decom')))...
                .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);
            
            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Decom_Max_CCC...
                = sum(MaxArray(contains({LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS.Operations_name},'Decom')))...
                .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);
            
            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Decom_Standard_CCC...
                = sum(Standard(contains({LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.OPERATIONS.Operations_name},'Decom')))...
                .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);
            
            % Total Annual OpEx (Min/Mean/Max/Standard Estimates)
            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_AnnualOpEx_Min_CCCpy...
                = LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Leasing_CCCpy...
                + LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Maint_Min_CCCpy;
            
            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_AnnualOpEx_Mean_CCCpy...
                = LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Leasing_CCCpy...
                + LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Maint_Mean_CCCpy; 
            
            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_AnnualOpEx_Max_CCCpy...
                = LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Leasing_CCCpy...
                + LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Maint_Max_CCCpy;   
            
            LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_AnnualOpEx_Standard_CCCpy...
                = LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Leasing_CCCpy...
                + LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Maint_Standard_CCCpy;   
            
            %% Decomissioning Expenditure (DecEx) - Array
            disp('   - Calculating DecEx...');
            LCOE.DISCRETE.SITES(s).DEVICES(d).DECEX.TotalDecEx_CCC...
                = less_decex(LCOE.DISCRETE.SITES(s).DEVICES(d).CAPEX.Manufacturing_CCC,0.2);
                         
            %% Ideal Annual Energy Delivered (Ideal AED) - Array
            disp('   - Calculating AED...');
            LCOE.DISCRETE.SITES(s).DEVICES(d).AED.Ideal_MWh...
                = YIELD.DISCRETE.IDEAL.DELIVERED.SITES(s).DEVICES(d).Energy_Ideal_DelPerDevice_kWh...
				.* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1)...
                ./ 1000;
            
            %% Actual Annual Energy Delivered (Actual AED) - Array
            for o = 1:size(DEVICES(d).OPERATIONS,2)
                % Operations Name
                LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).Operations_name...
                    = DEVICES(d).OPERATIONS(o).Name;
                
                for v = 1:size(DEVICES(d).OPERATIONS(o).VESSELS,2)
                    % Vessels Name
                    LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(v).Vessels_Name...
                        = DEVICES(d).OPERATIONS(o).VESSELS(v).Name;
                    
                    % Vessels Suitability
                    LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(v).Suitability4Operation...
                        = DEVICES(d).OPERATIONS(o).VESSELS(v).Suitability4Operation;
                    
                    if strcmp(DEVICES(d).OPERATIONS(o).VESSELS(v).Suitability4Operation,'Yes')
                        %% Actual AED - Probabilities of Metocean Downtime (Min/Mean/Max)
                       [LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MinProbMetoceanDownTime,...
                        LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MeanProbMetoceanDownTime,...
                        LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MaxProbMetoceanDownTime]...
                            = minmeanmax(([YIELD.DISCRETE.ACTUAL.DELIVERED.SITES(s).DEVICES(d).ActualEnergyDelivered.OPERATIONS(o).VESSELS(v).Monthly.MetInducedDowntime_ProbOccurence])...
                                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py);
                        % Cap Probabilities at 1            
                        LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MinProbMetoceanDownTime...
                            (LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MinProbMetoceanDownTime > 1)...
                            = 1;
                        LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MeanProbMetoceanDownTime...
                            (LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MeanProbMetoceanDownTime > 1)...
                            = 1;    
                        LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MaxProbMetoceanDownTime...
                            (LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MaxProbMetoceanDownTime > 1)...
                            = 1; 
                    else
                        % Unsuitable Vessel Placeholders
                        LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MinProbMetoceanDownTime  = NaN;
                        LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MeanProbMetoceanDownTime = NaN;
                        LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MaxProbMetoceanDownTime  = NaN;
                    end
                end
                
                %% Actual AED - Downtime due to Impact of Metocean Conditions on Operations
                % Find Index of Vessel with lowest Metocean Downtime
                [~,Idx] = min([LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS.MeanProbMetoceanDownTime]);
                
                % Name of Vessel with lowest Metocean Downtime
                LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).LowestDownTimeVessel...
                    = LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(Idx).Vessels_Name;
                
                % Actual AED for Vessel with lowest Metocean Downtime (Min/Mean/Max Estimates)
                LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).MinAED_Actual_MWh...
                    = (1 - LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(Idx).MaxProbMetoceanDownTime)...
                    .* LCOE.DISCRETE.SITES(s).DEVICES(d).AED.Ideal_MWh;
                 LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).MeanAED_Actual_MWh...
                    = (1 - LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(Idx).MeanProbMetoceanDownTime)...
                    .* LCOE.DISCRETE.SITES(s).DEVICES(d).AED.Ideal_MWh;
                LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).MaxAED_Actual_MWh...
                    = (1 - LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS(o).VESSELS(Idx).MinProbMetoceanDownTime)...
                    .* LCOE.DISCRETE.SITES(s).DEVICES(d).AED.Ideal_MWh;
            end
            
            %% Final Actual AED Estimates - Array 
            LCOE.DISCRETE.SITES(s).DEVICES(d).AED.Actual_Min_MWh...         % Take means of all Operations - is this correct?
                = mean([LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS.MinAED_Actual_MWh]);
            LCOE.DISCRETE.SITES(s).DEVICES(d).AED.Actual_Mean_MWh...
                = mean([LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS.MeanAED_Actual_MWh]);
            LCOE.DISCRETE.SITES(s).DEVICES(d).AED.Actual_Max_MWh...
                = mean([LCOE.DISCRETE.SITES(s).DEVICES(d).AED.OPERATIONS.MaxAED_Actual_MWh]);            
                       
            %% Levelised Cost of Energy
            disp('   - Calculating LCoE...');
            % Standard
            LCOE.DISCRETE.SITES(s).DEVICES(d).LCOE.LCoE_Standard_CCCpMWh...
                = lcoe(LCOE.DISCRETE.SITES(s).DEVICES(d).CAPEX.TotalCapEx_CCC + LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Install_Standard_CCC,...
                       LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_AnnualOpEx_Standard_CCCpy,...
                       LCOE.DISCRETE.SITES(s).DEVICES(d).DECEX.TotalDecEx_CCC + LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Decom_Standard_CCC,...
                       LCOE.DISCRETE.SITES(s).DEVICES(d).AED.Ideal_MWh,...
                       SCENARIO.Project.Project_Length.Project_Length_y(1),...
                       SCENARIO.Project.Project_DiscountRate.Project_DiscountRate_pc(1));
                   
            % LESS Tool Estimates (Min/Mean/Max)
            LCOE.DISCRETE.SITES(s).DEVICES(d).LCOE.ArrayLCoE_Min_CCCpMWh...
                = lcoe(LCOE.DISCRETE.SITES(s).DEVICES(d).CAPEX.TotalCapEx_CCC + LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Install_Min_CCC,...
                       LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_AnnualOpEx_Min_CCCpy,...
                       LCOE.DISCRETE.SITES(s).DEVICES(d).DECEX.TotalDecEx_CCC + LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Decom_Min_CCC,...
                       LCOE.DISCRETE.SITES(s).DEVICES(d).AED.Actual_Max_MWh,...
                       SCENARIO.Project.Project_Length.Project_Length_y(1),...
                       SCENARIO.Project.Project_DiscountRate.Project_DiscountRate_pc(1));
                   
            LCOE.DISCRETE.SITES(s).DEVICES(d).LCOE.ArrayLCoE_Mean_CCCpMWh...
                = lcoe(LCOE.DISCRETE.SITES(s).DEVICES(d).CAPEX.TotalCapEx_CCC + LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Install_Mean_CCC,...
                       LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_AnnualOpEx_Mean_CCCpy,...
                       LCOE.DISCRETE.SITES(s).DEVICES(d).DECEX.TotalDecEx_CCC + LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Decom_Mean_CCC,...
                       LCOE.DISCRETE.SITES(s).DEVICES(d).AED.Actual_Mean_MWh,...
                       SCENARIO.Project.Project_Length.Project_Length_y(1),...
                       SCENARIO.Project.Project_DiscountRate.Project_DiscountRate_pc(1));
                   
            LCOE.DISCRETE.SITES(s).DEVICES(d).LCOE.ArrayLCoE_Max_CCCpMWh...
                = lcoe(LCOE.DISCRETE.SITES(s).DEVICES(d).CAPEX.TotalCapEx_CCC + LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Install_Max_CCC,...
                       LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_AnnualOpEx_Max_CCCpy,...
                       LCOE.DISCRETE.SITES(s).DEVICES(d).DECEX.TotalDecEx_CCC + LCOE.DISCRETE.SITES(s).DEVICES(d).OPEX.Total_Decom_Max_CCC,...
                       LCOE.DISCRETE.SITES(s).DEVICES(d).AED.Actual_Min_MWh,...
                       SCENARIO.Project.Project_Length.Project_Length_y(1),...
                       SCENARIO.Project.Project_DiscountRate.Project_DiscountRate_pc(1)); 
                   
             % Finalise Device Section
             Stop = toc(Start); 
             disp([' - Time Elapsed: ',num2str(round2(Stop/60,0.01)),' minutes.']);
        end
    end
    % Finalise Discrete Section
    disp(' % LCoE for DISCRETE Sites calculated successfully.');
end

%% SPATIAL
if IN.RUN.SPATIAL
    disp('Calculating LCoE for SPATIAL Region...');
    %% Parallel Workers (Region)
    ValidChartDatumDepth_Binary = logical(~PATHFIND.MAPS.BinaryMobilityMap);% Water/Land Condition.
    TransmissionDistance_m      = PATHFIND.SPATIAL.TRANSMISSION.Path2LandFall_AStarDistance_m;
    
    for d = 1:size(DEVICES,2)
        disp([' - Calculating LCoE for "',DEVICES(d).Name,'" Device at each grid point (this may take some time)...']);
        disp('   - Calculating CapEx...'); Start = tic;
        
        %% Parallel Workers (Device Specific)
        ValidDeviceDeployment_Binary = YIELD.SPATIAL.IDEAL.GENERATED.DEVICES(d).ValidDeviceDeployment_Binary; 
        Manufacturing_CCC            = single(zeros(size(ValidDeviceDeployment_Binary)));
        TotalCapEx_CCC               = single(zeros(size(ValidDeviceDeployment_Binary)));
        
        %% Capital Expenditure (CapEx) - Array
        % Devices Name
        LCOE.SPATIAL.DEVICES(d).Devices_Name....
            = DEVICES(d).Name;
        
        % Device Development Costs
        LCOE.SPATIAL.DEVICES(d).CAPEX.DeviceDevelopment_CCC...
            = SCENARIO.Devices.Devices_Costs.Devices_DevelopmentCost_CCC(d);
        
        % Regional Site Selection Costs
        LCOE.SPATIAL.DEVICES(d).CAPEX.SiteSelection_CCC...
            = SCENARIO.Region.Region_Costs.Region_AssessmentCosts_CCC(1);
        
        for x = 1:size(ValidChartDatumDepth_Binary,1)
            for y = 1:size(ValidChartDatumDepth_Binary,2)
                if ValidDeviceDeployment_Binary(x,y)
                    % Manufacturing Costs
                    Manufacturing_CCC(x,y)...
                        = less_capex_manufact(SCENARIO.Transmission.Transmission_Costs.Transmission_ShoreSubStationInfrastructureCost_CCC(d) + SCENARIO.Transmission.Transmission_Costs.Transmission_ShoreTransformerCost_CCC(d),...
                                              SCENARIO.Transmission.Transmission_Costs.Transmission_OnboardTransformerCost_CCC(d) + SCENARIO.Transmission.Transmission_Costs.Transmission_OnboardSwitchgearCost_CCC(d) + SCENARIO.Transmission.Transmission_Costs.Transmission_ShoreSwitchgearCost_CCC(d),...
                                              SCENARIO.Transmission.Transmission_Costs.Tranmission_ExportCableCost_CCCpm(d) .* TransmissionDistance_m(x,y),...
                                              SCENARIO.Devices.Devices_Costs.Devices_StructureCost_CCC(d),...
                                              SCENARIO.Turbines.Turbines_Cost.Turbines_Cost_CCC(strcmp(SCENARIO.Turbines.Turbines_Cost.Turbines_Name, DEVICES(d).Turbines_Name)),...
                                              SCENARIO.Devices.Devices_Costs.Devices_AnchorCost_CCCpAnch(d),...
                                              SCENARIO.Devices.Devices_Costs.Devices_MooringLineCost_CCCpAnch(d),...
                                              SCENARIO.Project.Project_ArraySize.Project_ArraySize(1),...
                                              DEVICES(d).NumberTurbines,...
                                              DEVICES(d).NumberAnchorPoints);     
                                        
                    % Total Capital Expenditure
                    TotalCapEx_CCC(x,y)...
                        = less_capex(LCOE.SPATIAL.DEVICES(d).CAPEX.DeviceDevelopment_CCC,...
                                     LCOE.SPATIAL.DEVICES(d).CAPEX.SiteSelection_CCC,...
                                     Manufacturing_CCC(x,y));
                end
            end
        end
        
        % Assignment to Structure
        LCOE.SPATIAL.DEVICES(d).CAPEX.Manufacturing_CCC = Manufacturing_CCC;
        LCOE.SPATIAL.DEVICES(d).CAPEX.TotalCapEx_CCC    = TotalCapEx_CCC;
        LCOE.SPATIAL.DEVICES(d).CAPEX.Manufacturing_CCC(~ValidChartDatumDepth_Binary) = NaN;
        LCOE.SPATIAL.DEVICES(d).CAPEX.TotalCapEx_CCC(~ValidChartDatumDepth_Binary)    = NaN;  
        
        %% Annual Operational Expenditure (OpEx)
        disp('   - Calculating OpEx...');
        for o = 1:size(DEVICES(d).OPERATIONS,2)
            % Operations Name
            LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).Operations_name...
                = DEVICES(d).OPERATIONS(o).Name;
            
            % Preallocate - Most Cost Effective Vessel
            CostEffectiveVesselMean = NaN(size(DEVICES(d).OPERATIONS(o).VESSELS,2,1));
            
            for v = 1:size(DEVICES(d).OPERATIONS(o).VESSELS,2)
                % Vessels Name
                LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).Vessels_Name...
                    = DEVICES(d).OPERATIONS(o).VESSELS(v).Name;
                
                % Vessels Suitability
                LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).Suitability4Operation...
                    = DEVICES(d).OPERATIONS(o).VESSELS(v).Suitability4Operation;
                
                if strcmp(DEVICES(d).OPERATIONS(o).VESSELS(v).Suitability4Operation,'Yes')
                    %% Port Costs (Hire) - Monthly Per Device Breakdown
                    % Preallocate - A* Port, Min/Max Month Indexes, Mean Values
                    NearestSuitableValidPortName = PATHFIND.SPATIAL.VESSELS(v).NearestSuitableValidPort;
                    PortsHire_Annual_MinMax      = zeros(12,1);
                    PortsHire_Annual_Mean        = single(zeros(size(ValidDeviceDeployment_Binary)));
                    
                    for m = 1:12
                        % Month Name
                        LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Month...
                            = monthnum2name(m,'Short');
                        
                        % Preallocate - Port Required Duration/Cost
                        Ports_TotalReqDuration_D = single(zeros(size(ValidDeviceDeployment_Binary)));
                        Ports_Hire_CCC           = single(zeros(size(ValidDeviceDeployment_Binary)));
                        
                        for x = 1:size(ValidChartDatumDepth_Binary,1)
                            for y = 1:size(ValidChartDatumDepth_Binary,2)
                                if ValidDeviceDeployment_Binary(x,y)
                                    % Total Days Required (Accounting for Standby)
                                    Ports_TotalReqDuration_D(x,y)...
                                        = ceil(OPERATIONS.SPATIAL.DEVICES(d).OPERATIONS(o).VESSELS(v).TotalStandbyTime(m).OperationDuration_D(x,y)...
                                               + OPERATIONS.SPATIAL.DEVICES(d).OPERATIONS(o).VESSELS(v).TotalStandbyTime(m).TotalStandbyTime_D(x,y));
                                    % Cap at Number of Days within Month
                                    if Ports_TotalReqDuration_D(x,y) > eomday(year(METOCEAN.SPATIAL.DateTime_UTC(1)),m)
                                        Ports_TotalReqDuration_D(x,y) = eomday(year(METOCEAN.SPATIAL.DateTime_UTC(1)),m);
                                    end
                                    
                                    % Port Hire Costs
                                    Ports_Hire_CCC(x,y)...
                                        = less_portcosts(Ports_TotalReqDuration_D(x,y),...
                                                         SCENARIO.Ports.Ports_Costs.Ports_HireCosts_CCCpd(strcmp(SCENARIO.Ports.Ports_Costs.Ports_Name, NearestSuitableValidPortName{x,y})));
                                end
                            end
                        end
                        
                        % Assignment to Structure
                        LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Ports_TotalReqDuration_D = Ports_TotalReqDuration_D;
                        LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Ports_Hire_CCC           = Ports_Hire_CCC;
                        LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Ports_TotalReqDuration_D(~ValidChartDatumDepth_Binary) = NaN;                        
                        LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Ports_Hire_CCC(~ValidChartDatumDepth_Binary)           = NaN;
                        
                        % Min/Max Month Indexes  
                        PortsHire_Annual_MinMax(m) = mean(LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Ports_Hire_CCC,'all','omitnan');

                        % Mean Month Values
                        PortsHire_Annual_Mean...
                            = PortsHire_Annual_Mean...
                            + LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Ports_Hire_CCC;
                    end
                    
                    %% Vessel Costs (Hire, Running Standby) - Monthly Per Device Breakdown 
                    % Preallocate - Min/Max Month Indexes, Mean Values
                    VesselsHire_Annual_MinMax    = zeros(12,1);
                    VesselsRunning_Annual_MinMax = zeros(12,1);
                    VesselsStandby_Annual_MinMax = zeros(12,1);
                    VesselsHire_Annual_Mean      = single(zeros(size(ValidDeviceDeployment_Binary)));
                    VesselsRunning_Annual_Mean   = single(zeros(size(ValidDeviceDeployment_Binary)));
                    VesselsStandby_Annual_Mean   = single(zeros(size(ValidDeviceDeployment_Binary)));
                    
                    for m = 1:12
                        % Vessel Costs
                       [LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Vessels_Hire_CCC,...
                        LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Vessels_Running_CCC,...
                        LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Vessels_Standby_CCC]...
                            = less_vesselcosts(OPERATIONS.SPATIAL.DEVICES(d).OPERATIONS(o).VESSELS(v).TotalStandbyTime(m).OperationDuration_D,...
                                               DEVICES(d).OPERATIONS(o).OnSiteDuration_h,...
                                               OPERATIONS.SPATIAL.DEVICES(d).OPERATIONS(o).VESSELS(v).TotalTransitTime_h,...
                                               OPERATIONS.SPATIAL.DEVICES(d).OPERATIONS(o).VESSELS(v).TotalStandbyTime(m).TotalStandbyTime_D,...
                                               SCENARIO.Vessels.Vessels_Costs.Vessels_HireCost_CCCpd(v),...
                                               SCENARIO.Vessels.Vessels_Costs.Vessels_RunningCost_CCCph(v),...
                                               SCENARIO.Vessels.Vessels_Costs.Vessels_StandbyCost_CCCpd(v));
                           
                        % Min/Max Month Indexes  
                        VesselsHire_Annual_MinMax(m)    = mean(LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Vessels_Hire_CCC,'all','omitnan');
                        VesselsRunning_Annual_MinMax(m) = mean(LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Vessels_Running_CCC,'all','omitnan');
                        VesselsStandby_Annual_MinMax(m) = mean(LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Vessels_Standby_CCC,'all','omitnan');                  
                        
                        % Mean Month Values
                        VesselsHire_Annual_Mean...
                            = VesselsHire_Annual_Mean...
                            + LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Vessels_Hire_CCC;
                        VesselsRunning_Annual_Mean...
                            = VesselsRunning_Annual_Mean...
                            + LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Vessels_Running_CCC;
                        VesselsStandby_Annual_Mean...
                            = VesselsStandby_Annual_Mean...
                            + LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(m).Vessels_Standby_CCC;
                    end
                    
                    %% Port Costs (Hire) - Annual Per Device 
                    % Min/Max Months - Port Hire
                    [~,MinIdx]  = min(PortsHire_Annual_MinMax);
                    [~,MaxIdx]  = max(PortsHire_Annual_MinMax);
                    
                    % Min/Mean/Max Port Hire
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Min.Ports_Hire_CCC...
                        = LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(MinIdx).Ports_Hire_CCC...
                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py;
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Mean.Ports_Hire_CCC...
                        = PortsHire_Annual_Mean...
                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py...
                        ./ 12;
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Max.Ports_Hire_CCC...
                        = LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(MaxIdx).Ports_Hire_CCC...
                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py;

                    %% Vessel Costs (Hire, Running, Standby) - Annual Per Device  
                    % Vessel Hire Costs
                    [~,MinIdx]  = min(VesselsHire_Annual_MinMax);
                    [~,MaxIdx]  = max(VesselsHire_Annual_MinMax);
                    
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Min.Vessels_Hire_CCC...
                        = LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(MinIdx).Vessels_Hire_CCC...
                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py;
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Mean.Vessels_Hire_CCC...
                        = VesselsHire_Annual_Mean...
                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py...
                        ./ 12;
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Max.Vessels_Hire_CCC...
                        = LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(MaxIdx).Vessels_Hire_CCC...
                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py;
                                        
                    % Vessel Running Costs
                    [~,MinIdx]  = min(VesselsRunning_Annual_MinMax);
                    [~,MaxIdx]  = max(VesselsRunning_Annual_MinMax);
                    
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Min.Vessels_Running_CCC...
                        = LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(MinIdx).Vessels_Running_CCC...
                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py;
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Mean.Vessels_Running_CCC...
                        = VesselsRunning_Annual_Mean...
                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py...
                        ./ 12;
                    
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Max.Vessels_Running_CCC...
                        = LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(MaxIdx).Vessels_Running_CCC...
                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py;                    
                    
                    % Vessel Standby Costs
                    [~,MinIdx] = min(VesselsStandby_Annual_MinMax);
                    [~,MaxIdx] = max(VesselsStandby_Annual_MinMax);
                    
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Min.Vessels_Standby_CCC...
                        = LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(MinIdx).Vessels_Standby_CCC...
                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py;
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Mean.Vessels_Standby_CCC...
                        = VesselsStandby_Annual_Mean...
                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py...
                        ./ 12;
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Max.Vessels_Standby_CCC...
                        = LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice(MaxIdx).Vessels_Standby_CCC...
                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py;                        

                    %% Annual OpEx - LESS Tool Estimates 
                    % Preallocate
                    MinOpEx_CCC  = single(zeros(size(ValidDeviceDeployment_Binary)));
                    MeanOpEx_CCC = single(zeros(size(ValidDeviceDeployment_Binary)));
                    MaxOpEx_CCC  = single(zeros(size(ValidDeviceDeployment_Binary)));
                    
                    for x = 1:size(ValidChartDatumDepth_Binary,1)
                        for y = 1:size(ValidChartDatumDepth_Binary,2)
                            if ValidDeviceDeployment_Binary(x,y)
                                % LESS Min OpEx Estimate
                                MinOpEx_CCC(x,y)...
                                    = less_opex_operations(LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Min.Ports_Hire_CCC(x,y),...
                                                           LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Min.Vessels_Hire_CCC(x,y),...
                                                           LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Min.Vessels_Running_CCC(x,y),...
                                                           LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Min.Vessels_Standby_CCC(x,y));
                                % LESS Mean OpEx Estimate
                                MeanOpEx_CCC(x,y)...
                                    = less_opex_operations(LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Mean.Ports_Hire_CCC(x,y),...
                                                           LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Mean.Vessels_Hire_CCC(x,y),...
                                                           LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Mean.Vessels_Running_CCC(x,y),...
                                                           LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Mean.Vessels_Standby_CCC(x,y));
                                % LESS Max OpEx Estimate
                                MaxOpEx_CCC(x,y)...
                                    = less_opex_operations(LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Max.Ports_Hire_CCC(x,y),...
                                                           LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Max.Vessels_Hire_CCC(x,y),...
                                                           LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Max.Vessels_Running_CCC(x,y),...
                                                           LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice.Max.Vessels_Standby_CCC(x,y));
                            end
                        end
                    end
                    
                    % Assignment to Structure
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MinOpEx_CCC  = MinOpEx_CCC;
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MeanOpEx_CCC = MeanOpEx_CCC;                    
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MaxOpEx_CCC  = MaxOpEx_CCC;   
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MinOpEx_CCC(~ValidChartDatumDepth_Binary) = NaN;
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MeanOpEx_CCC(~ValidChartDatumDepth_Binary)= NaN;
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MaxOpEx_CCC(~ValidChartDatumDepth_Binary) = NaN;
                    
                    %% Annual OpEx - Standard Estimates 
                    % Preallocate
                    Standard_Ports_Hire_CCCpy      = single(zeros(size(ValidDeviceDeployment_Binary)));
                    Standard_Vessels_Hire_CCCpy    = single(zeros(size(ValidDeviceDeployment_Binary)));
                    Standard_Vessels_Standby_CCCpy = single(zeros(size(ValidDeviceDeployment_Binary)));
                    StandardOpEx_CCC               = single(zeros(size(ValidDeviceDeployment_Binary)));

                    for x = 1:size(ValidChartDatumDepth_Binary,1)
                        for y = 1:size(ValidChartDatumDepth_Binary,2)
                            if ValidDeviceDeployment_Binary(x,y)
                                % Standard Port Costs
                                Standard_Ports_Hire_CCCpy(x,y)...
                                    = less_portcosts(DEVICES(d).OPERATIONS(o).OnSiteDuration_h ./ 24,...
                                                     SCENARIO.Ports.Ports_Costs.Ports_HireCosts_CCCpd(strcmp(SCENARIO.Ports.Ports_Costs.Ports_Name, NearestSuitableValidPortName(x,y))));
                                % Standard Vessel Costs
                               [Standard_Vessels_Hire_CCCpy(x,y),...
                                Standard_Vessels_Running_CCCpy(x,y),~]...
                                    = less_vesselcosts(DEVICES(d).OPERATIONS(o).OnSiteDuration_h ./ 24,...
                                                       DEVICES(d).OPERATIONS(o).OnSiteDuration_h,...
                                                       OPERATIONS.SPATIAL.DEVICES(d).OPERATIONS(o).VESSELS(v).TotalTransitTime_h(x,y),...
                                                       0,...
                                                       SCENARIO.Vessels.Vessels_Costs.Vessels_HireCost_CCCpd(v),...
                                                       SCENARIO.Vessels.Vessels_Costs.Vessels_RunningCost_CCCph(v),...
                                                       SCENARIO.Vessels.Vessels_Costs.Vessels_StandbyCost_CCCpd(v));   
                                % Standard OpEx Estimate
                                StandardOpEx_CCC(x,y)...
                                    = less_opex_operations(Standard_Ports_Hire_CCCpy(x,y) .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py,...
                                                           Standard_Vessels_Hire_CCCpy(x,y) .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py,...
                                                           Standard_Vessels_Running_CCCpy(x,y) .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py,...
                                                           Standard_Vessels_Standby_CCCpy(x,y) .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py);               
                            end
                        end
                    end

                    % Assignment to Structure
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).StandardOpEx_CCC = StandardOpEx_CCC;
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).StandardOpEx_CCC(~ValidChartDatumDepth_Binary) = NaN;
                else
                    % Unsuitable Vessel Placeholders
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MonthlyPerDevice = 'VESSEL UNSUITABLE';
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).AnnualPerDevice  = 'VESSEL UNSUITABLE';
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MinOpEx_CCC      = NaN;
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MeanOpEx_CCC     = NaN;
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MaxOpEx_CCC      = NaN;
                    LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).StandardOpEx_CCC = NaN;
                end
                
                % Update Vessel Mean
                CostEffectiveVesselMean(v)...
                    = mean(LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(v).MeanOpEx_CCC,'all','omitnan');
            end
            
            %% Cheapest Vessel for Each Operation
            % Cheapest Vessel Index
            [~,VesselIdx] = min(CostEffectiveVesselMean);
            
             % Cheapest Vessel Name
            LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).MostCostEffectiveVessel...
                = LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(VesselIdx).Vessels_Name;
            
            % Estimates of OpEx with Cheapest Vessel (Min/Mean/Max/Standard Estimates)
            LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).MinOpEx_CCC...
                = LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(VesselIdx).MinOpEx_CCC;
            LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).MeanOpEx_CCC...
                = LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(VesselIdx).MeanOpEx_CCC;
            LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).MaxOpEx_CCC...
                = LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(VesselIdx).MaxOpEx_CCC;
            LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).StandardOpEx_CCC...
                = LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).VESSELS(VesselIdx).StandardOpEx_CCC;
        end
        
        %% Total Annual OpEx - Array
        % Regional Leasing Costs
        LCOE.SPATIAL.DEVICES(d).OPEX.Leasing_CCCpy...                       % Assumed mean of all Discrete Site Leasing Costs.
            = mean(SCENARIO.Region.Region_Costs.Region_LeasingCosts_CCCpy);
        
        % Preallocate - Operation Costs
        Total_Install_Min_CCC      = single(zeros(size(ValidDeviceDeployment_Binary)));
        Total_Install_Mean_CCC     = single(zeros(size(ValidDeviceDeployment_Binary)));
        Total_Install_Max_CCC      = single(zeros(size(ValidDeviceDeployment_Binary)));
        Total_Install_Standard_CCC = single(zeros(size(ValidDeviceDeployment_Binary)));
        Total_Maint_Min_CCCpy      = single(zeros(size(ValidDeviceDeployment_Binary)));
        Total_Maint_Mean_CCCpy     = single(zeros(size(ValidDeviceDeployment_Binary)));
        Total_Maint_Max_CCCpy      = single(zeros(size(ValidDeviceDeployment_Binary)));
        Total_Maint_Standard_CCCpy = single(zeros(size(ValidDeviceDeployment_Binary)));
        Total_Decom_Min_CCC        = single(zeros(size(ValidDeviceDeployment_Binary)));
        Total_Decom_Mean_CCC       = single(zeros(size(ValidDeviceDeployment_Binary)));
        Total_Decom_Max_CCC        = single(zeros(size(ValidDeviceDeployment_Binary)));
        Total_Decom_Standard_CCC   = single(zeros(size(ValidDeviceDeployment_Binary)));
        
        for o = 1:size(DEVICES(d).OPERATIONS,2)
            if contains(LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).Operations_name,'Install')
                % Installation Operations (Min/Mean/Max/Standard Estimates)
                Total_Install_Min_CCC...
                    = Total_Install_Min_CCC....
                    + LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).MinOpEx_CCC;
                Total_Install_Mean_CCC...
                    = Total_Install_Mean_CCC....
                    + LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).MeanOpEx_CCC;
                Total_Install_Max_CCC...
                    = Total_Install_Max_CCC....
                    + LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).MaxOpEx_CCC;
                Total_Install_Standard_CCC...
                    = Total_Install_Standard_CCC....
                    + LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).StandardOpEx_CCC;
            elseif contains(LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).Operations_name,'Maint')
                % Maintenance (Total of Minor & Major, Min/Mean/Max/Standard Estimates)
                Total_Maint_Min_CCCpy...
                    = Total_Maint_Min_CCCpy....
                    + LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).MinOpEx_CCC;
                Total_Maint_Mean_CCCpy...
                    = Total_Maint_Mean_CCCpy....
                    + LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).MeanOpEx_CCC;
                Total_Maint_Max_CCCpy...
                    = Total_Maint_Max_CCCpy....
                    + LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).MaxOpEx_CCC;
                Total_Maint_Standard_CCCpy...
                    = Total_Maint_Standard_CCCpy....
                    + LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).StandardOpEx_CCC;
            elseif contains(LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).Operations_name,'Decom')
                % Decommissioning (Min/Mean/Max/Standard Estimates) 
                Total_Decom_Min_CCC...
                    = Total_Decom_Min_CCC....
                    + LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).MinOpEx_CCC;
                Total_Decom_Mean_CCC...
                    = Total_Decom_Mean_CCC....
                    + LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).MeanOpEx_CCC;
                Total_Decom_Max_CCC...
                    = Total_Decom_Max_CCC....
                    + LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).MaxOpEx_CCC;
                Total_Decom_Standard_CCC...
                    = Total_Decom_Standard_CCC....
                    + LCOE.SPATIAL.DEVICES(d).OPEX.OPERATIONS(o).StandardOpEx_CCC;           
            end
        end

        % Installation - Assignment to Structure (and account for Array size)
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Install_Min_CCC...
            = Total_Install_Min_CCC .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Install_Mean_CCC...
            = Total_Install_Mean_CCC .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);        
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Install_Max_CCC...
            = Total_Install_Max_CCC .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);  
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Install_Standard_CCC...
            = Total_Install_Standard_CCC .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);    
        
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Install_Min_CCC(~ValidChartDatumDepth_Binary)      = NaN;
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Install_Mean_CCC(~ValidChartDatumDepth_Binary)     = NaN;
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Install_Max_CCC(~ValidChartDatumDepth_Binary)      = NaN;    
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Install_Standard_CCC(~ValidChartDatumDepth_Binary) = NaN;
        
        % Maintenance - Assignment to Structure (and account for Array size)
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Maint_Min_CCCpy...
            = Total_Maint_Min_CCCpy .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Maint_Mean_CCCpy...
            = Total_Maint_Mean_CCCpy .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);        
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Maint_Max_CCCpy...
            = Total_Maint_Max_CCCpy .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);              
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Maint_Standard_CCCpy...
            = Total_Maint_Standard_CCCpy .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);           
        
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Maint_Min_CCCpy(~ValidChartDatumDepth_Binary)      = NaN;
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Maint_Mean_CCCpy(~ValidChartDatumDepth_Binary)     = NaN;
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Maint_Max_CCCpy(~ValidChartDatumDepth_Binary)      = NaN;    
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Maint_Standard_CCCpy(~ValidChartDatumDepth_Binary) = NaN;
        
        % Decommissioning - Assignment to Structure (and account for Array size)
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Decom_Min_CCC...
            = Total_Decom_Min_CCC .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Decom_Mean_CCC...
            = Total_Decom_Mean_CCC .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);  
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Decom_Max_CCC...
            = Total_Decom_Max_CCC .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);        
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Decom_Standard_CCC...
            = Total_Decom_Standard_CCC .* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1);         
        
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Decom_Min_CCC(~ValidChartDatumDepth_Binary)      = NaN;
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Decom_Mean_CCC(~ValidChartDatumDepth_Binary)     = NaN;
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Decom_Max_CCC(~ValidChartDatumDepth_Binary)      = NaN;    
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_Decom_Standard_CCC(~ValidChartDatumDepth_Binary) = NaN;
        
        % Total Annual OpEx (Min/Mean/Max/Standard Estimates)
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_AnnualOpEx_Min_CCCpy...
            = LCOE.SPATIAL.DEVICES(d).OPEX.Leasing_CCCpy...
            + LCOE.SPATIAL.DEVICES(d).OPEX.Total_Maint_Min_CCCpy;
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_AnnualOpEx_Mean_CCCpy...
            = LCOE.SPATIAL.DEVICES(d).OPEX.Leasing_CCCpy...
            + LCOE.SPATIAL.DEVICES(d).OPEX.Total_Maint_Mean_CCCpy;
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_AnnualOpEx_Max_CCCpy...
            = LCOE.SPATIAL.DEVICES(d).OPEX.Leasing_CCCpy...
            + LCOE.SPATIAL.DEVICES(d).OPEX.Total_Maint_Max_CCCpy;
        LCOE.SPATIAL.DEVICES(d).OPEX.Total_AnnualOpEx_Standard_CCCpy...
            = LCOE.SPATIAL.DEVICES(d).OPEX.Leasing_CCCpy...
            + LCOE.SPATIAL.DEVICES(d).OPEX.Total_Maint_Standard_CCCpy;
        
        %% Decomissioning Expenditure (DecEx) - Array
        disp('   - Calculating DecEx...');
        % Preallocate
        TotalDecEx_CCC = single(zeros(size(ValidDeviceDeployment_Binary)));
        
        % DecEx
        for x = 1:size(ValidChartDatumDepth_Binary,1)
            for y = 1:size(ValidChartDatumDepth_Binary,2)
                if ValidDeviceDeployment_Binary(x,y)
                    TotalDecEx_CCC(x,y) = less_decex(LCOE.SPATIAL.DEVICES(d).CAPEX.Manufacturing_CCC(x,y),0.2);
                end
            end
        end
        
        % Assignment to Structure
        LCOE.SPATIAL.DEVICES(d).DECEX.TotalDecEx_CCC = TotalDecEx_CCC;
        LCOE.SPATIAL.DEVICES(d).DECEX.TotalDecEx_CCC(~ValidChartDatumDepth_Binary) = NaN;
        
        %% Ideal Annual Energy Delivered (Ideal AED) - Array
        disp('   - Calculating AED...');
        LCOE.SPATIAL.DEVICES(d).AED.Ideal_MWh...
            = YIELD.SPATIAL.IDEAL.DELIVERED.DEVICES(d).Energy_Ideal_DelPerDevice_kWh...
			.* SCENARIO.Project.Project_ArraySize.Project_ArraySize(1)...
            ./ 1000;
        
        %% Actual Annual Energy Delivered (Actual AED) - Array
        for o = 1:size(DEVICES(d).OPERATIONS,2)
            % Operations Name
            LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).Operations_name...
                = DEVICES(d).OPERATIONS(o).Name;
            
            % Preallocate - Vessel with lowest Metocean Downtime
            AEDEffectiveVesselMean = NaN(size(DEVICES(d).OPERATIONS(o).VESSELS,2,1));
            
            for v = 1:size(DEVICES(d).OPERATIONS(o).VESSELS,2)
                % Vessels Name
                LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(v).Vessels_Name...
                    = DEVICES(d).OPERATIONS(o).VESSELS(v).Name;
                
                % Vessels Suitability
                LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(v).Suitability4Operation...
                    = DEVICES(d).OPERATIONS(o).VESSELS(v).Suitability4Operation;
                
                if strcmp(DEVICES(d).OPERATIONS(o).VESSELS(v).Suitability4Operation,'Yes')
                    %% Actual AED - Probabilities of Metocean Downtime (Min/Mean/Max)
                    % Preallocate Min/Max Indexes, Mean Values, Monthly Breakdown
                    ProbMetoceanDownTime_Annual_MinMax = zeros(12,1);
                    MeanProbMetoceanDownTime = single(zeros(size(ValidDeviceDeployment_Binary)));
       
                    for m = 1:12
                        ProbMetoceanDownTime_Annual_MinMax(m)...
                            = mean(YIELD.SPATIAL.ACTUAL.DELIVERED.DEVICES(d).ActualEnergyDelivered.OPERATIONS(o).VESSELS(v).Monthly(m).MetInducedDowntime_ProbOccurence,'all','omitnan');
                        MeanProbMetoceanDownTime...
                            = MeanProbMetoceanDownTime...
                            + YIELD.SPATIAL.ACTUAL.DELIVERED.DEVICES(d).ActualEnergyDelivered.OPERATIONS(o).VESSELS(v).Monthly(m).MetInducedDowntime_ProbOccurence;
                    end
                    
                    [~,MinIdx]  = min(ProbMetoceanDownTime_Annual_MinMax);
                    [~,MaxIdx]  = max(ProbMetoceanDownTime_Annual_MinMax);
                    
                    % Probabilities of Metocean Downtime
                    LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MinProbMetoceanDownTime...
                       = YIELD.SPATIAL.ACTUAL.DELIVERED.DEVICES(d).ActualEnergyDelivered.OPERATIONS(o).VESSELS(v).Monthly(MinIdx).MetInducedDowntime_ProbOccurence...
                       .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py;
                    LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MeanProbMetoceanDownTime...
                        = MeanProbMetoceanDownTime...
                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py...
                        ./ 12;
                    LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MaxProbMetoceanDownTime...
                        = YIELD.SPATIAL.ACTUAL.DELIVERED.DEVICES(d).ActualEnergyDelivered.OPERATIONS(o).VESSELS(v).Monthly(MaxIdx).MetInducedDowntime_ProbOccurence...
                        .* DEVICES(d).OPERATIONS(o).FrequencyOccurence_py;
                    
                    % Cap Probabilities at 1 
                    LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MinProbMetoceanDownTime...
                        (LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MinProbMetoceanDownTime > 1)...
                        = 1;
                    LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MeanProbMetoceanDownTime...
                        (LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MeanProbMetoceanDownTime > 1)...
                        = 1;
                    LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MaxProbMetoceanDownTime...
                        (LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MaxProbMetoceanDownTime > 1)...
                        = 1;
                else
                    % Unsuitable Vessel Placeholders
                    LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MinProbMetoceanDownTime  = NaN;
                    LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MeanProbMetoceanDownTime = NaN;
                    LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MaxProbMetoceanDownTime  = NaN;
                end
                
                % Update Vessel Mean
                AEDEffectiveVesselMean(v)...
                    = mean(LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(v).MeanProbMetoceanDownTime,'all','omitnan');
            end
            
            %% Actual AED - Downtime due to Impact of Metocean Conditions on Operations
            % Find Index of Vessel with lowest Metocean Downtime
            [~,Idx] = min(AEDEffectiveVesselMean);
            
            % Name of Vessel with lowest Metocean Downtime
            LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).LowestDownTimeVessel...
                = LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(Idx).Vessels_Name;
            
            % Actual AED for Vessel with lowest Metocean Downtime (Min/Mean/Max Estimates)
            LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).MinAED_Actual_MWh...
                = (1 - LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(Idx).MaxProbMetoceanDownTime)...
                .* LCOE.SPATIAL.DEVICES(d).AED.Ideal_MWh;
            LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).MeanAED_Actual_MWh...
                = (1 - LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(Idx).MeanProbMetoceanDownTime)...
                .* LCOE.SPATIAL.DEVICES(d).AED.Ideal_MWh;
            LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).MaxAED_Actual_MWh...
                = (1 - LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).VESSELS(Idx).MinProbMetoceanDownTime)...
                .* LCOE.SPATIAL.DEVICES(d).AED.Ideal_MWh;
            
        end
        
        %% Final Actual AED Estimates - Array 
        % Preallocate
        Actual_Min_MWh  = single(zeros(size(ValidDeviceDeployment_Binary)));
        Actual_Mean_MWh = single(zeros(size(ValidDeviceDeployment_Binary))); 
        Actual_Max_MWh  = single(zeros(size(ValidDeviceDeployment_Binary)));
        
        for o = 1:size(DEVICES(d).OPERATIONS,2)
            Actual_Min_MWh  = Actual_Min_MWh  + LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).MinAED_Actual_MWh;
            Actual_Mean_MWh = Actual_Mean_MWh + LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).MeanAED_Actual_MWh;
            Actual_Max_MWh  = Actual_Max_MWh  + LCOE.SPATIAL.DEVICES(d).AED.OPERATIONS(o).MaxAED_Actual_MWh;
        end
        
        % Assignment to Structure
        LCOE.SPATIAL.DEVICES(d).AED.Actual_Min_MWh  = Actual_Min_MWh  ./ size(DEVICES(d).OPERATIONS,2);
        LCOE.SPATIAL.DEVICES(d).AED.Actual_Mean_MWh = Actual_Mean_MWh ./ size(DEVICES(d).OPERATIONS,2);       
        LCOE.SPATIAL.DEVICES(d).AED.Actual_Max_MWh  = Actual_Max_MWh  ./ size(DEVICES(d).OPERATIONS,2);
        
        LCOE.SPATIAL.DEVICES(d).AED.Actual_Min_MWh(~ValidChartDatumDepth_Binary)  = NaN;
        LCOE.SPATIAL.DEVICES(d).AED.Actual_Mean_MWh(~ValidChartDatumDepth_Binary) = NaN;
        LCOE.SPATIAL.DEVICES(d).AED.Actual_Max_MWh(~ValidChartDatumDepth_Binary)  = NaN;   

        %% Levelised Cost of Energy
        disp('   - Calculating LCoE...');
        % Preallocate
        LCoE_Standard_CCCpMWh  = single(zeros(size(ValidDeviceDeployment_Binary)));
        ArrayLCoE_Min_CCCpMWh  = single(zeros(size(ValidDeviceDeployment_Binary)));
        ArrayLCoE_Mean_CCCpMWh = single(zeros(size(ValidDeviceDeployment_Binary)));
        ArrayLCoE_Max_CCCpMWh  = single(zeros(size(ValidDeviceDeployment_Binary)));
        
        for x = 1:size(ValidChartDatumDepth_Binary,1)
            for y = 1:size(ValidChartDatumDepth_Binary,2)
                if ValidDeviceDeployment_Binary(x,y)
                    % Standard
                    LCoE_Standard_CCCpMWh(x,y)...
                        = lcoe(LCOE.SPATIAL.DEVICES(d).CAPEX.TotalCapEx_CCC(x,y) + LCOE.SPATIAL.DEVICES(d).OPEX.Total_Install_Standard_CCC(x,y),...
                               LCOE.SPATIAL.DEVICES(d).OPEX.Total_AnnualOpEx_Standard_CCCpy(x,y),...
                               LCOE.SPATIAL.DEVICES(d).DECEX.TotalDecEx_CCC(x,y) + LCOE.SPATIAL.DEVICES(d).OPEX.Total_Decom_Standard_CCC(x,y),...
                               LCOE.SPATIAL.DEVICES(d).AED.Ideal_MWh(x,y),...
                               SCENARIO.Project.Project_Length.Project_Length_y(1),...
                               SCENARIO.Project.Project_DiscountRate.Project_DiscountRate_pc(1));
                           
                    % LESS Tool Estimates (Min/Mean/Max)
                    ArrayLCoE_Min_CCCpMWh(x,y)...
                        = lcoe(LCOE.SPATIAL.DEVICES(d).CAPEX.TotalCapEx_CCC(x,y) + LCOE.SPATIAL.DEVICES(d).OPEX.Total_Install_Min_CCC(x,y),...
                               LCOE.SPATIAL.DEVICES(d).OPEX.Total_AnnualOpEx_Min_CCCpy(x,y),...
                               LCOE.SPATIAL.DEVICES(d).DECEX.TotalDecEx_CCC(x,y) + LCOE.SPATIAL.DEVICES(d).OPEX.Total_Decom_Min_CCC(x,y),...
                               LCOE.SPATIAL.DEVICES(d).AED.Actual_Max_MWh(x,y),...
                               SCENARIO.Project.Project_Length.Project_Length_y(1),...
                               SCENARIO.Project.Project_DiscountRate.Project_DiscountRate_pc(1));
                           
                    ArrayLCoE_Mean_CCCpMWh(x,y)...
                        = lcoe(LCOE.SPATIAL.DEVICES(d).CAPEX.TotalCapEx_CCC(x,y) + LCOE.SPATIAL.DEVICES(d).OPEX.Total_Install_Mean_CCC(x,y),...
                               LCOE.SPATIAL.DEVICES(d).OPEX.Total_AnnualOpEx_Mean_CCCpy(x,y),...
                               LCOE.SPATIAL.DEVICES(d).DECEX.TotalDecEx_CCC(x,y) + LCOE.SPATIAL.DEVICES(d).OPEX.Total_Decom_Mean_CCC(x,y),...
                               LCOE.SPATIAL.DEVICES(d).AED.Actual_Mean_MWh(x,y),...
                               SCENARIO.Project.Project_Length.Project_Length_y(1),...
                               SCENARIO.Project.Project_DiscountRate.Project_DiscountRate_pc(1));
                           
                    ArrayLCoE_Max_CCCpMWh(x,y)...
                        = lcoe(LCOE.SPATIAL.DEVICES(d).CAPEX.TotalCapEx_CCC(x,y) + LCOE.SPATIAL.DEVICES(d).OPEX.Total_Install_Max_CCC(x,y),...
                               LCOE.SPATIAL.DEVICES(d).OPEX.Total_AnnualOpEx_Max_CCCpy(x,y),...
                               LCOE.SPATIAL.DEVICES(d).DECEX.TotalDecEx_CCC(x,y) + LCOE.SPATIAL.DEVICES(d).OPEX.Total_Decom_Max_CCC(x,y),...
                               LCOE.SPATIAL.DEVICES(d).AED.Actual_Min_MWh(x,y),...
                               SCENARIO.Project.Project_Length.Project_Length_y(1),...
                               SCENARIO.Project.Project_DiscountRate.Project_DiscountRate_pc(1));
                end
            end
        end
        
        % Assignment to Structure
        LCOE.SPATIAL.DEVICES(d).LCOE.LCoE_Standard_CCCpMWh  = LCoE_Standard_CCCpMWh;
        LCOE.SPATIAL.DEVICES(d).LCOE.ArrayLCoE_Min_CCCpMWh  = ArrayLCoE_Min_CCCpMWh;       
        LCOE.SPATIAL.DEVICES(d).LCOE.ArrayLCoE_Mean_CCCpMWh = ArrayLCoE_Mean_CCCpMWh;        
        LCOE.SPATIAL.DEVICES(d).LCOE.ArrayLCoE_Max_CCCpMWh  = ArrayLCoE_Max_CCCpMWh;  
        
        LCOE.SPATIAL.DEVICES(d).LCOE.LCoE_Standard_CCCpMWh(~ValidChartDatumDepth_Binary)  = NaN;
        LCOE.SPATIAL.DEVICES(d).LCOE.ArrayLCoE_Min_CCCpMWh(~ValidChartDatumDepth_Binary)  = NaN;        
        LCOE.SPATIAL.DEVICES(d).LCOE.ArrayLCoE_Mean_CCCpMWh(~ValidChartDatumDepth_Binary) = NaN;        
        LCOE.SPATIAL.DEVICES(d).LCOE.ArrayLCoE_Max_CCCpMWh(~ValidChartDatumDepth_Binary)  = NaN;        
        
        % Finalise Device Section
        Stop = toc(Start); 
        disp([' - Time Elapsed: ',num2str(round2(Stop/60,0.01)),' minutes.']);
    end
    % Finalise SPATIAL Section
    disp(' % LCoE for SPATIAL Region calculated successfully.');
end

end
