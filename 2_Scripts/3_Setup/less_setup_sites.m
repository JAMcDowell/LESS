function [SITES] = less_setup_sites(SCENARIO, IN)
%% Function Description
%

%% Inputs Description
% SCENARIO

% METOCEAN

% IN

%% Outputs Description
% SITES

% PORTS

%% Input Checks
disp('Setting up "Sites" data structures...');

%% SITES Setup
SITES = struct([]);                                                         % Preallocate memory.
for s = 1:size(SCENARIO.Sites.Sites_Location,1)
    %% Convert Site Lat/Lon to UTM
    % Site Name
    SITES(s).Name = SCENARIO.Sites.Sites_Location.Sites_Name{s};
    
    % Site Lat/Lon
    SITES(s).Lat_dd = SCENARIO.Sites.Sites_Location.Sites_Lat_dd(s);
    SITES(s).Lon_dd = SCENARIO.Sites.Sites_Location.Sites_Lon_dd(s);

    % Site Lat/Lon to UTM
    [SITES(s).UTM_E_m,...
     SITES(s).UTM_N_m,...
     SITES(s).UTM_Zone,...
     SITES(s).UTM_Hemi]...
        = wgs2utm(SCENARIO.Sites.Sites_Location.Sites_Lat_dd(s),...
                  SCENARIO.Sites.Sites_Location.Sites_Lon_dd(s));  
              
    %% Impose Consistent UTM Zone
    if IN.RUN.SPATIAL                                                       % If SPATIAL bathy data is available...
        %% Impose UTM Zone based on SPATIAL Data
        if ~isequal(SITES(s).UTM_Zone,SCENARIO.Region.Region_UTM.Region_UTM_Zone(1)) ...                                  
        || ~strcmp(SITES(s).UTM_Hemi,SCENARIO.Region.Region_UTM.Region_UTM_Hemi{1})                                
            % Site does not match SPATIAL UTM Zone       
            warning(['"',SITES(s).Name,...                                  % Throw warning                                      
                     '" Site and SPATIAL bathymetry data are in different UTM Zones / Hemispheres! The UTM zone of the SPATIAL bathymetry will be extended to incorporate the Site - over large distances this will lead to measurement errors.']);
        
        end 
        
        % Impose UTM Zone & Hemi of SPATIAL bathy data
        [SITES(s).Imposed_UTM_E_m,...                                       
         SITES(s).Imposed_UTM_N_m,...             
         SITES(s).Imposed_UTM_Zone,...
         SITES(s).Imposed_UTM_Hemi]...
            = wgs2utm(SITES(s).Lat_dd,...
                      SITES(s).Lon_dd,...
                      SCENARIO.Region.Region_UTM.Region_UTM_Zone(1),...
                      SCENARIO.Region.Region_UTM.Region_UTM_Hemi{1}); 
                  
    else                                                                    % Otherwise if SPATIAL data is unavailable...
        %% Impost Constant UTM Zone Between Sites
        if ~strcmp(SITES(s).UTM_Zone,...                                    % If the UTM zone between sites does not match... 
                   SITES(1).UTM_Zone)                       
            warning(['"',SITES(s).Name,...                                  % Throw warning
                     '" Site and "',...
                     SITES(s).Name,'" are in different UTM Zones / Hemispheres! The UTM zone of "'...
                     SITES(s).Name,'" will be extended to incorporate "',...
                     SITES(s).Name,'" - over large distances this will lead to measurement errors.']);
                 
        end 
        
        % Impose constant UTM Zone & Hemi (arbitrarily based on first site)
        [SITES(s).Imposed_UTM_E_m,...                                       
         SITES(s).Imposed_UTM_N_m,...             
         SITES(s).Imposed_UTM_Zone,...
         SITES(s).Imposed_UTM_Hemi]...
            = wgs2utm(SITES(s).Lat_dd,...
                      SITES(s).Lon_dd,...
                      SITES(1).UTM_Zone,...
                      SITES(1).UTM_Hemi); 
                  
    end

    %% Site Specific Ports Setup
    for p = 1:size(SCENARIO.Ports.Ports_Locations,1)
        % Port Name
        SITES(s).PORTS(p).Name...
            = SCENARIO.Ports.Ports_Locations.Ports_Name{p};
        
        % Port Latitude
        SITES(s).PORTS(p).Lat_dd...
            = SCENARIO.Ports.Ports_Locations.Ports_Lat_dd(p);
        
        % Port Longitude
        SITES(s).PORTS(p).Lon_dd...
            = SCENARIO.Ports.Ports_Locations.Ports_Lon_dd(p);
        
        % Port Size
        SITES(s).PORTS(p).Ports_SizeClassification...
            = SCENARIO.Ports.Ports_SizeClassification.Ports_SizeClassification{p};
          
        % Convert Port Lat/Lon to UTM 
       [SITES(s).PORTS(p).UTM_E_m,...
        SITES(s).PORTS(p).UTM_N_m,...
        SITES(s).PORTS(p).UTM_Zone,...
        SITES(s).PORTS(p).UTM_Hemi]...
            = wgs2utm(SITES(s).PORTS(p).Lat_dd,...
                      SITES(s).PORTS(p).Lon_dd); 
                  
        % Impose Site UTM (as defined by SPATIAL data or first site)
       [SITES(s).PORTS(p).Imposed_UTM_E_m,...
        SITES(s).PORTS(p).Imposed_UTM_N_m,...
        SITES(s).PORTS(p).Imposed_UTM_Zone,...
        SITES(s).PORTS(p).Imposed_UTM_Hemi]...
            = wgs2utm(SITES(s).PORTS(p).Lat_dd,...
                      SITES(s).PORTS(p).Lon_dd,...
                      SITES(s).Imposed_UTM_Zone,...
                      SITES(s).Imposed_UTM_Hemi); 
        
        % Warning for user that new UTM Zone/Hemi has been Imposed          
        if SITES(s).PORTS(p).UTM_Zone ~= SITES(s).PORTS(p).Imposed_UTM_Zone ...
        || ~strcmp(SITES(s).PORTS(p).UTM_Hemi, SITES(s).PORTS(p).Imposed_UTM_Hemi)
              warning(['"',SITES(s).Name,'" Site and "',...
                       SITES(s).PORTS(p).Name,'" Port are in different UTM Zones / Hemispheres! The Site UTM zone will be extended to incorporate the Port location - over large distances this will lead to measurement errors.']);
        end
        
        % Error if Imposed UTM Zone/Hemi has not been performed correctly
        if SITES(s).Imposed_UTM_Zone ~= SITES(s).PORTS(p).Imposed_UTM_Zone ...
        || ~strcmp(SITES(s).Imposed_UTM_Hemi, SITES(s).PORTS(p).Imposed_UTM_Hemi)
            error(['"',SITES(s).Name,'" Site and "',...
                SITES(s).PORTS(p).Name, '"Port Imposed UTM Zones / Hemispheres do not match! Check Site and Port positions.']);
        end   

        %% Calculate Euclidean Distance between Site and Port
        SITES(s).PORTS(p).Site2Port_EuclideanDistance_m...
            = utmeuclideandist(SITES(s).Imposed_UTM_E_m,...
                               SITES(s).Imposed_UTM_N_m,...
                               SITES(s).Imposed_UTM_Zone,...
                               SITES(s).Imposed_UTM_Hemi,...
                               SITES(s).PORTS(p).Imposed_UTM_E_m,...
                               SITES(s).PORTS(p).Imposed_UTM_N_m,...
                               SITES(s).PORTS(p).Imposed_UTM_Zone,...
                               SITES(s).PORTS(p).Imposed_UTM_Hemi);
        
    end
end
% Finalise
disp(' - "Sites" data extracted successfully.');
disp(' % All "Sites" data structures setup successfully.');

end